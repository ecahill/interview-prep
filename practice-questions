import java.util.*;

public boolean doesSumExist(int[] arr, int val) {
  HashSet set = new HashSet();
  for (int i = 0; i < arr.length; i++) {
    if (set.contains(val - arr[i])) {
      return true;
    }
    else {
      set.add(arr[i]);
    }
  }
  return false;
}


public class Entry {
  private int key;
  private int value;
  private Entry next;
  
  public Entry(key, value) {
    this.key = key;
    this.value = value;
    this.next = null;
  }
  
  public int getValue() {
    return value;
  }
  
  public void setValue(int value) {
    this.value = value;
  }
  
  public int getKey() {
    return key;
  }
  
  public void setKey(int key) {
    this.key = key;
  }
  
  public Entry getNext() {
    return next;
  }
  
  public void setNext(Entry next) {
    this.next = net;
  }
}

public class Structure {
  private final int SIZE = 32;
  private ArrayList<Integer> list;
  private Entry[] table;
  private int total;
  private Random rand;
  
  public Structure () {
    rand = new Random();
    table = new Entry[SIZE];
    for (int i = 0; i < SIZE; i++) {
      table[i] = null;
    }
  }
  
  public void add(int num) {
    Entry e = new Entry(num, total);
    list.add(num);
    int hash = num.hashCode() % SIZE;
    if (table[hash] == null) {
      table[hash] = e;
    }
    else {
      Entry cur = table[hash];
      while (cur.getNext() != null) {
        cur = cur.getNext();
      }
      cur.setNext(e);
    }
    total++;
  }
  
  public void remove(int num) {
    int indexValue = -1;
    int hash = num.hashCode() % SIZE;
    if (table[hash] == null) {
      return;
    }
    else if (!table[hash].equals(num)) {
      Entry cur = table[hash];
      if (cur.getKey() == num) {
        indexValue = cur.getValue();
        table[hash] = cur.getNext();
      }
      while(cur.getNext() != null) {
        if (cur.getNext().getKey().equals(num)) {
          indexValue = cur.getNext().getValue());
          cur.setNext(cur.getNext().getNext());
          return;
        }
        cur = cur.getNext();
      }
    }
    if (indexValue >= 0) {
      int temp = list.get(total-1);
      list.set(indexValue, temp);
      list.remove(total-1);
      total--;    
    }
  }
  
  public int getRandom() {
    int index = rand.nextInt(total);
    return arr.get(index);
  }
}
